# Copyright (C) 2021 - present Juergen Zimmermann, Hochschule Karlsruhe
# Copyright (C) 2024 - present Felix Jaeger
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Universitätsdaten zu lesen"
type Query {
  universitaeten: [Universitaet!]
  universitaet(id: ID!): Universitaet
}

"Funktionen, um Universitäten neu anzulegen"
type Mutation {
  create (input: UniversitaetInput!): CreatePayload

  token(username: String!, password: String!): TokenResult
  refresh(refresh_token: String!): TokenResult
}

"Daten zur Bibliothek einer Universität"
type Bibliothek {
  name: String!
  isil: String
}

"Daten zum Kurs einer Universität"
type Kurs {
  titel: String!
  startDatum: String
}

"Datenschema zu einer Universität, das gelesen wird"
type Universitaet {
  id: Int!
  version: Int!
  name: String!
  standort: String
  anzahlStudierende: Int
  homepage: String
  gegruendet: Int
  fakultaeten: [String]
  ranking: Int
  bibliothek: Bibliothek!
}

"Input-Daten für eine neue Universität"
input UniversitaetInput {
  name: String!
  standort: String
  anzahlStudierende: Int
  homepage: String
  gegruendet: Int
  fakultaeten: [String]
  ranking: Int
  bibliothek: BibliothekInput!
  kurse: [KursInput!]
}

"Input-Daten zur Bibliothek einer Universität"
input BibliothekInput {
  name: String!
  isil: String
}

"Input-Daten zum Kurs einer Universität"
input KursInput {
  titel: String!
  startDatum: String!
}

"Rückgabedaten nach dem Anlegen einer Universität"
type CreatePayload {
  id: Int
}

type TokenResult {
  access_token: String!
  expires_in: Int!
  refresh_token: String!
  refresh_expires_in: Int!
}
